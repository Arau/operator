apiVersion: apps/v1
kind: Deployment
metadata:
  name: storageos-node-manager
  labels:
    app.kubernetes.io/component: node-manager
spec:
  replicas: 0
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: node-manager
    spec:
      containers:
      - image: node-manager:latest
        imagePullPolicy: IfNotPresent
        name: manager
        # livenessProbe:
        #   httpGet:
        #     path: /healthz
        #     port: 8081
        #   initialDelaySeconds: 15
        #   periodSeconds: 20
        # readinessProbe:
        #   httpGet:
        #     path: /readyz
        #     port: 8081
        #   initialDelaySeconds: 5
        #   periodSeconds: 10
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccountName: storageos-node-manager
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: node.kubernetes.io/disk-pressure
        operator: Exists
      - key: node.kubernetes.io/memory-pressure
        operator: Exists
      - key: node.kubernetes.io/network-unavailable
        operator: Exists
      - key: node.kubernetes.io/not-ready
        operator: Exists
      - key: node.kubernetes.io/pid-pressure
        operator: Exists
      - key: node.kubernetes.io/unreachable
        operator: Exists
      - key: node.kubernetes.io/unschedulable
        operator: Exists
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: control-plane
            topologyKey: kubernetes.io/hostname
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: node-manager
            topologyKey: kubernetes.io/hostname
